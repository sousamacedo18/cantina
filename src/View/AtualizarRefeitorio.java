/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Controller.AlunoController;
import Controller.BolsaController;
import Controller.ConexaoController;
import Controller.RefeitorioController;
import Dao.AlunoDao;
import Dao.BolsaDao;
import Dao.RefeitorioDao;
import java.io.FileWriter;
import java.io.IOException;
import java.io.UnsupportedEncodingException;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import org.json.simple.JSONObject;

/**
 *
 * @author Home
 */
public class AtualizarRefeitorio extends javax.swing.JFrame {

    /**
     * Creates new form AtualizarRefeitorio
     */
    public AtualizarRefeitorio() {
        initComponents();
        carregarTabela();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jToggleButton1 = new javax.swing.JToggleButton();
        jToggleButton2 = new javax.swing.JToggleButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "ID_ALUNO", "BOLSA", "TURMA", "DATA", "RESERVA", "QTD", "VALOR"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jToggleButton1.setText("Atualizar");
        jToggleButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton1ActionPerformed(evt);
            }
        });

        jToggleButton2.setText("testando json");
        jToggleButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 907, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(96, 96, 96)
                        .addComponent(jToggleButton1)
                        .addGap(83, 83, 83)
                        .addComponent(jToggleButton2)))
                .addContainerGap(19, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jToggleButton1))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jToggleButton2)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 442, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jToggleButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton1ActionPerformed
        // TODO add your handling code here:
        AlunoDao alunodao = new AlunoDao();
        AlunoController aluno = new AlunoController();
        RefeitorioDao refeitoriodao = new RefeitorioDao();
        RefeitorioController refeitorio = new RefeitorioController();
        BolsaDao bolsadao = new BolsaDao();
        BolsaController bolsa = new BolsaController();
        int idbolsa=0,idturma=0;
        double valorbolsa=0;
        
        int linhaSelecionada = -1;
//        linhaSelecionada = jTable1.getSelectedRow();
        int tamanho=0,count=0;
        tamanho=jTable1.getRowCount();
        while(count<tamanho){
       
            int i=(int)jTable1.getValueAt(count, 1);
            int j=(int)jTable1.getValueAt(count, 0);
            
                try {
                    if(refeitoriodao.existealuno(i)){
                        for (AlunoController u : alunodao.CarregarAluno(i)) {
                            idbolsa=u.getBolsa();
                            idturma=u.getTurmaid();
                        }
                        for(BolsaController b : bolsadao.buscarBolsaId(idbolsa)){
                            valorbolsa=b.getValorbolsa();
                        }
                        refeitorio.setIdturma(idturma);
                        refeitorio.setTipobolsa(idbolsa);
                        refeitorio.setValor(valorbolsa);
                        refeitorio.setIdrefeitorio(j);
                                        try {
                                            refeitoriodao.Atualizar(refeitorio);
                                            count++;
                                        } catch (UnsupportedEncodingException ex) {
                                            Logger.getLogger(AtualizarRefeitorio.class.getName()).log(Level.SEVERE, null, ex);
                                        }
                    }else{count++;}   } catch (SQLException ex) {
                    Logger.getLogger(AtualizarRefeitorio.class.getName()).log(Level.SEVERE, null, ex);
                }
        }
        carregarTabela();
        JOptionPane.showMessageDialog(null,"Terminou");
        
    }//GEN-LAST:event_jToggleButton1ActionPerformed

    private void jToggleButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton2ActionPerformed
        // TODO add your handling code here:
        SalvarConfiguracoes();
    }//GEN-LAST:event_jToggleButton2ActionPerformed
     public void SalvarConfiguracoes(){
            String banco,nomebanco,driver,porta,local,usuario,senha;
            
                
               
                JSONObject objetojson = new JSONObject();
                FileWriter writeFile = null;


                objetojson.put("pastafotoaluno","deucerto");

                
        try {
            writeFile = new FileWriter("conf.json");
        } catch (IOException ex) {
            Logger.getLogger(ConexaoController.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            System.out.println(objetojson.toJSONString());
            writeFile.write(objetojson.toJSONString());
            writeFile.flush();
            writeFile.close();
        } catch (IOException ex) {
            Logger.getLogger(ConexaoController.class.getName()).log(Level.SEVERE, null, ex);
        }
                JOptionPane.showMessageDialog(null,"Configurações salvas com sucesso!!!!");
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AtualizarRefeitorio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AtualizarRefeitorio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AtualizarRefeitorio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AtualizarRefeitorio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AtualizarRefeitorio().setVisible(true);
            }
        });
    }
   public void carregarTabela(){
            DefaultTableModel tabela = (DefaultTableModel) jTable1.getModel();
            //tbTodasEntradas.setRowSorter(new TableRowSorter(tabela));
            jTable1.setModel(tabela);
            jTable1.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
            jTable1.getColumnModel().getColumn(0).setPreferredWidth(50);//idtabela
            jTable1.getColumnModel().getColumn(1).setPreferredWidth(50);
            jTable1.getColumnModel().getColumn(2).setPreferredWidth(90);
            jTable1.getColumnModel().getColumn(3).setPreferredWidth(60);
//            tbTodasEntradas.getColumnModel().getColumn(3).setCellRenderer(centralizado);
            jTable1.getColumnModel().getColumn(4).setPreferredWidth(60);
            jTable1.getColumnModel().getColumn(5).setPreferredWidth(100);
            jTable1.getColumnModel().getColumn(6).setPreferredWidth(50);
            jTable1.getColumnModel().getColumn(7).setPreferredWidth(50);
            tabela.setNumRows(0);
            RefeitorioDao dao = new RefeitorioDao();
      
            for (RefeitorioController u : dao.CarregarTudo()) {
                tabela.addRow(new Object[]
                {
                   u.getIdrefeitorio(), 
                   u.getIdrefaluno(),
                   u.getTipobolsa(),
                   u.getIdturma(),
                   u.getDatarefeitorio(),
                   u.getHorarefeitorio(),
                   u.getQuantidaderefeitorio(),
                   u.getValor()
                   
                });               
            }
   }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JToggleButton jToggleButton1;
    private javax.swing.JToggleButton jToggleButton2;
    // End of variables declaration//GEN-END:variables
}
