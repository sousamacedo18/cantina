/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;
import JImage.JIResizeImage;

import java.awt.Image;
import java.awt.image.BufferedImage;
import java.awt.FileDialog;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.media.NoPlayerException;
import javax.media.CannotRealizeException;
import javax.media.MediaLocator;
import javax.media.Player;
import javax.media.Manager;
import javax.media.control.FrameGrabbingControl;
import javax.media.Buffer;
import javax.media.format.VideoFormat;
import javax.media.util.BufferToImage;
import javax.swing.ImageIcon;
import javax.swing.JToggleButton;
import java.awt.image.BufferedImage;
import javax.swing.JOptionPane;
/**
 *
 * @author Home
 */
public class Webcam extends javax.swing.JDialog {
  
    AlunoCadastroForm alunoform = new AlunoCadastroForm();
    private String caminhofoto;
    private String arquivo;
    private String pasta;

    public String getCaminhofoto() {
        return caminhofoto;
    }

    public String getArquivo() {
        return arquivo;
    }

    public void setArquivo(String arquivo) {
        this.arquivo = arquivo;
    }
    
   public String lerCaminho(){
       String arq = "conf.txt";
       String texto=Arquivo.Read(arq);
       if(texto.isEmpty()){
           JOptionPane.showMessageDialog(null, "Não foi possível ler o caminho guardado");
       }

   return texto;
   }
    Player player;
    BufferedImage bi;
    String fn;
    /**
     * Creates new form Webcam
     */
    public Webcam(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
            
        
        this.setLocationRelativeTo(null);

                try 
        {
            initCamera();
        } 
        catch (IOException ex) 
        {
            Logger.getLogger(Webcam.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null,"1"+ex);
        } 
        catch (NoPlayerException ex) 
        {
            Logger.getLogger(Webcam.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null,"2"+ex);
        } 
        catch (CannotRealizeException ex) 
        {
            Logger.getLogger(Webcam.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null,"3"+ex);
        } 
    }
      private void initCamera() throws IOException, NoPlayerException, CannotRealizeException {  
        MediaLocator ml = new MediaLocator("vfw://0");
        player = Manager.createRealizedPlayer(ml);
        this.tbWebCam.add(player.getVisualComponent());
       
        player.start();
    }
    private void finalizarCamera()throws IOException, NoPlayerException, CannotRealizeException{
        MediaLocator ml = new MediaLocator("vfw://0");
        player = Manager.createRealizedPlayer(ml);
        this.tbWebCam.add(player.getVisualComponent());
        player.close();
    }

    private void setImageButton(JToggleButton tbutton, Image image) { 
        tbutton.setIcon(new ImageIcon(image));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        tbCapture = new javax.swing.JToggleButton();
        tbWebCam = new javax.swing.JToggleButton();
        bCapture = new javax.swing.JButton();
        bSave = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("Capturar Foto");

        bCapture.setText("Capturar");
        bCapture.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bCaptureActionPerformed(evt);
            }
        });

        bSave.setText("Confimar");
        bSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bSaveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tbWebCam, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(66, 66, 66)
                        .addComponent(bCapture)))
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tbCapture, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(bSave)
                        .addGap(75, 75, 75)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(151, 151, 151)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel1)
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(tbWebCam, javax.swing.GroupLayout.DEFAULT_SIZE, 212, Short.MAX_VALUE)
                    .addComponent(tbCapture, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bCapture)
                    .addComponent(bSave))
                .addContainerGap(61, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bCaptureActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bCaptureActionPerformed
        FrameGrabbingControl fgc = (FrameGrabbingControl) player.getControl("javax.media.control.FrameGrabbingControl");
        Buffer buffer = fgc.grabFrame();
        
        BufferToImage bti = new BufferToImage((VideoFormat) buffer.getFormat());
        Image image = bti.createImage(buffer);
        
        JIResizeImage resize = new JIResizeImage();
        bi = (BufferedImage) image;
        Image imageresize = resize.rescale(bi, 210,220);
        
        this.setImageButton(this.tbCapture, imageresize);
    }//GEN-LAST:event_bCaptureActionPerformed

    private void bSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bSaveActionPerformed
             //System.out.println(new File("src/fotoaluno").getAbsolutePath()); 
             //String caminho=(new File("src/fotoaluno/").getAbsolutePath());
             FileDialog fd = new FileDialog(Webcam.this, "Save Image", FileDialog.SAVE);
            // fd.setDirectory("C:\\Users\\Home\\Documents\\NetBeansProjects\\refeitorio\\src\\fotosaluno\\");
             fd.setDirectory(lerCaminho().trim());
             fd.setFile(arquivo);
            
                //fd.show();
        
        
        if (fd.getDirectory()!= null) 
        {
            fn = fd.getDirectory() + fd.getFile()+".jpg";
            System.out.println(fn);
           
            try
            {
                File make = new File(fn);
                try
                {
                    ImageIO.write(bi, "jpg", make);
                    //JOptionPane.showMessageDialog(null, caminho+"/"+fd.getFile() + ".jpg");
                    caminhofoto=fn;
                     player.close();
                    player.deallocate();                   
                    this.dispose();

                   
                   
                }
                catch (IOException ex)
                {
                    Logger.getLogger(Webcam.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            catch (Exception ex)
            {
                
            }
        }
       
    }//GEN-LAST:event_bSaveActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Webcam.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Webcam.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Webcam.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Webcam.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
                 public void run() {
                   Webcam dialog = new Webcam(new javax.swing.JFrame(), true);
                     dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
      
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
            
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bCapture;
    private javax.swing.JButton bSave;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JToggleButton tbCapture;
    private javax.swing.JToggleButton tbWebCam;
    // End of variables declaration//GEN-END:variables
}
